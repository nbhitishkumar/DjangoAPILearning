# Generated by Django 3.1.3 on 2020-11-27 16:26

import datetime
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Users',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('phone_no', models.CharField(blank=True, default='', max_length=20)),
                ('is_phone_verified', models.BooleanField(default=False, verbose_name='Phone Verification')),
                ('is_email_verified', models.BooleanField(default=True, verbose_name='Email Verification')),
                ('verified_code', models.CharField(max_length=30)),
                ('reset_password', models.BooleanField(default=False)),
                ('address', models.CharField(blank=True, default='', max_length=255, null=True)),
                ('profile_image', models.CharField(blank=True, max_length=225, null=True)),
                ('latitude', models.CharField(max_length=255, null=True)),
                ('longitude', models.CharField(max_length=255, null=True)),
                ('created_date', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('modified_date', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('is_blocked', models.BooleanField(default=False)),
                ('is_deleted', models.BooleanField(default=False)),
                ('owner_name', models.CharField(blank=True, max_length=255, null=True)),
                ('shop_name', models.CharField(blank=True, max_length=255, null=True)),
                ('gstin_present', models.CharField(blank=True, max_length=255, null=True)),
                ('gstin_number', models.CharField(blank=True, max_length=255, null=True)),
                ('registration_date', models.DateTimeField(blank=True, null=True)),
                ('gst_state', models.CharField(blank=True, max_length=255, null=True)),
                ('gst_type', models.CharField(blank=True, max_length=255, null=True)),
                ('fssai_number', models.IntegerField(default=0, null=True)),
                ('fssai_reg_name', models.CharField(blank=True, max_length=255, null=True)),
                ('fssai_exp_date', models.DateTimeField(blank=True, null=True)),
                ('fssai_address', models.CharField(blank=True, default='', max_length=255, null=True)),
                ('shop_city', models.CharField(blank=True, max_length=255, null=True)),
                ('shop_latitude', models.CharField(max_length=255, null=True)),
                ('shop_longitude', models.CharField(max_length=255, null=True)),
                ('shop_landmark', models.CharField(max_length=255, null=True)),
                ('pin_code', models.IntegerField(default=0, null=True)),
                ('shop_image', models.CharField(blank=True, max_length=225, null=True)),
                ('aadhaar_image', models.CharField(blank=True, max_length=225, null=True)),
                ('gstin_image', models.CharField(blank=True, max_length=225, null=True)),
                ('fssai_image', models.CharField(blank=True, max_length=225, null=True)),
                ('user_type', models.IntegerField(default=0, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'auth_user',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='OTP',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mobile', models.CharField(blank=True, max_length=15, null=True)),
                ('otp', models.CharField(blank=True, max_length=100, null=True)),
                ('created_date', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('modified_date', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('is_verified', models.BooleanField(default=False)),
                ('is_deleted', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_otp', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'otp',
            },
        ),
    ]
